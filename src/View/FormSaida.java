/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import static View.VendaEmprestimo.lproe;
import static View.VendaEmprestimo.lprov;
import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import controller.ClienteJpaController;
import controller.EmprestimoJpaController;
import controller.EntradaJpaController;
import controller.FornecedorJpaController;
import controller.ImpostoJpaController;
import controller.ProdutoJpaController;
import controller.SaidaJpaController;
import controller.TiposaidaJpaController;
import controller.VendaJpaController;
import controller.exceptions.NonexistentEntityException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import metodos.ValidarFloat;
import metodos.ValidarInteiro;
import metodos.ValidarString;
import modelo.Cliente;
import modelo.Emprestimo;
import modelo.Entrada;
import modelo.EntradaPK;
import modelo.Fornecedor;
import modelo.Imposto;
import modelo.Produto;
import modelo.Saida;
import modelo.SaidaPK;
import modelo.Tiposaida;
import modelo.Venda;
import modelo.Vendedor;

/**
 *
 * @author Ussimane
 */
public class FormSaida extends javax.swing.JDialog {

    /**
     * Creates new form FormProduto
     */
    EntityManagerFactory emf = new metodos.ControllerAcess().getEntityManagerFactory();
    private static String t;
    private static Saida sa;
    private static Produto po;
    Entrada ea;
    int qtdi = 0;
    private static int client = 0;

    public FormSaida(java.awt.Frame parent, Produto p, Saida s, String t, int c, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Imagens/sas.png")).getImage());
        txtIdP.setVisible(false);
        dpk.setVisible(false);
        this.client = c;
        if (s != null) {
            this.sa = new SaidaJpaController(emf).findSaida(s.getSaidaPK());
        }
        this.t = t;
        this.po = new ProdutoJpaController(emf).findProduto(p.getIdproduto());
        txtQntP.setDocument(new ValidarInteiro());
        comboboxp(comboprod);
        // lbpv.setText("0.0");
        labelTitle.setText(t);
        lbValidacao.setVisible(false);
        cvd.setSelected(true);
        obs.setEnabled(false);
        combobox(cbe, this.po);
        if (cbe.getItemCount() > 0) {
            cbe.setSelectedIndex(0);
        }
        qa.setText(p.getQtstock() + "");
        this.setLocationRelativeTo(null);
        if (s != null) {
            //Boolean b = new VendaJpaController(emf).getExistC(p);
            comboprod.setSelectedItem(this.po);
            ea = new EntradaJpaController(emf).getEntData(s.getDatae());
            // cbe.removeItem(ea);
            cbe.removeAllItems();
            // ea.setQs(ea.getQs() - sa.getQtd());
            if (s.getObs() == null) {
                //ea.setQv(ea.getQv() - sa.getQtd());
                cvd.setSelected(true);
                obs.setEnabled(false);
            } else {
                //ea.setQd(ea.getQd() - sa.getQtd());
                obs.setText(s.getObs());
                cvc.setSelected(true);
                obs.setEnabled(true);
            }
            if (t.equals("Editar Saida")) {
                comboprod.setEnabled(false);
                //  txtQntP.setEditable(false);
            }
            qtdi = ea.getQtd() - (ea.getQs() - sa.getQtd());
            cbe.addItem(ea);
            cbe.setSelectedItem(ea);
            txtIdP.setText(sa.getSaidaPK().getIdproduto() + "");
            dpk.setDate(sa.getSaidaPK().getData());
            txtQntP.setText(sa.getQtd() + "");
            labelTitle.setText("Editar Saida");
            qa.setText((po.getQtstock() + sa.getQtd()) + "");
            ep.setText("Preco: " + ea.getPreco());
            qtde.setText("Quantidade: " + qtdi);//ea.getQs())));
        }
        this.getRootPane().setDefaultButton(jButton1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        txtIdP = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        lbValidacao = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtQntP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        qa = new javax.swing.JLabel();
        cbe = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        forn = new javax.swing.JLabel();
        dataexp = new javax.swing.JLabel();
        qtde = new javax.swing.JLabel();
        ep = new javax.swing.JLabel();
        dpk = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        cvd = new javax.swing.JRadioButton();
        cvc = new javax.swing.JRadioButton();
        obs = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboprod = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(getLimpaVenda());
        setName("dialogProd"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        lbValidacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbValidacao.setForeground(new java.awt.Color(255, 51, 51));
        lbValidacao.setText("jLabel4");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/bt_ok.png"))); // NOI18N
        jButton1.setText("Aceitar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/bt_cancel.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Quantidade a sair:");

        jLabel1.setText("Total no Armazem:");

        qa.setText(" ");

        cbe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbeItemStateChanged(evt);
            }
        });

        jLabel8.setText("Serie/Lote:");

        forn.setText(" ");

        dataexp.setText(" ");

        qtde.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        qtde.setText(" ");

        ep.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ep.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtQntP, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qa, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel8)
                        .addGap(32, 32, 32)
                        .addComponent(cbe, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ep, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(forn, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dataexp, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(qtde, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(qa))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(forn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataexp)
                .addGap(32, 32, 32)
                .addComponent(ep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qtde)
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQntP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cvd.setText("Para Loja");
        cvd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cvdItemStateChanged(evt);
            }
        });

        cvc.setText("Outro");
        cvc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cvcItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(cvd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cvc)
                .addGap(94, 94, 94))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cvd)
                .addComponent(cvc))
        );

        jLabel3.setText("Observacao:");

        comboprod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboprod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboprodItemStateChanged(evt);
            }
        });

        jLabel4.setText("Produto:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(dpk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(obs, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(lbValidacao, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(txtIdP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(comboprod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbValidacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboprod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(7, 7, 7)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(obs, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void comboboxp(JComboBox c) {
        c.removeAllItems();
        //c.addItem("Todos");
        List<Produto> lv = new ProdutoJpaController(emf).getProdAsc();
        if (lv.isEmpty()) {
            return;
        }
        Produto[] elements = lv.toArray(new Produto[]{});
        AutoCompleteSupport support = AutoCompleteSupport.install(
                c, GlazedLists.eventListOf(elements));
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (comboprod.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um Produto!", "Atencao", JOptionPane.WARNING_MESSAGE);
            comboprod.grabFocus();
            return;
        }

        if (txtQntP.getText().trim().equals("")|| Integer.parseInt(txtQntP.getText()) <= 0) {
            lbValidacao.setVisible(true);
            lbValidacao.setText("Insira a quantidade");
            txtQntP.requestFocusInWindow();
            return;
        }
        if (cbe.getSelectedItem() == null) {
            lbValidacao.setVisible(true);
            lbValidacao.setText("Seleccione a entrada");
            cbe.requestFocusInWindow();
            return;
        }
        if (obs.isEnabled() && obs.getText().trim().equals("")) {
            lbValidacao.setVisible(true);
            lbValidacao.setText("Introduza uma observacao");
            obs.requestFocusInWindow();
            return;
        }

        if (txtIdP.getText().trim().equals("")) {
//            ClienteJpaController cc = new ClienteJpaController(emf);
//            if(cc.existeCodigo(txtNuit.getText())!=0){
//                lbValidacao.setVisible(true);
//                lbValidacao.setText("Este codigo ja existe. Introduza outro");
//                txtNuit.requestFocusInWindow();
//                return;
//            }
            Produto ppp = (Produto) comboprod.getSelectedItem();
            SaidaJpaController sc = new SaidaJpaController(emf);
            ProdutoJpaController pc = new ProdutoJpaController(emf);
            EntradaJpaController ec = new EntradaJpaController(emf);
            EntityManager em = emf.createEntityManager();
            Entrada ent = (Entrada) cbe.getSelectedItem();
            em.getTransaction().begin();/////////////////////////////
            try {
                Entrada e = ec.findEntrada(ent.getEntradaPK());
                Produto prod = pc.findProdutoS(ppp.getIdproduto(), em);
                e.setProduto(prod);
                Saida s = new Saida();
                s.setProduto(prod);
                s.setUtilizador(new Vendedor(client));
                s.setDatae(e.getEntradaPK().getData());
                s.setSaidaPK(new SaidaPK(ppp.getIdproduto(), new Date()));

                int qt = Integer.parseInt(txtQntP.getText());
                //        System.out.println("qt:" + qt);
                if ((e.getQtd() - e.getQs()) >= qt) {
                    s.setQtd(qt);
                    prod.setQtstock(prod.getQtstock() - qt);
                    e.setQs(e.getQs() + qt);
                    if (!obs.isEnabled()) {
                        prod.setQtdvenda(prod.getQtdvenda() + qt);
                        e.setQv(e.getQv() + qt);
                        s.setObs(null);
                        Tiposaida ts = new TiposaidaJpaController(emf).findTiposaida(1);
                        s.setTiposaida(ts);
                    } else {
                        e.setQd(e.getQd() + qt);
                        s.setObs(obs.getText());
                        Tiposaida ts = new TiposaidaJpaController(emf).findTiposaida(3);
                    s.setTiposaida(ts);
                    }
                    //   System.out.println("qv qt:" + e.getQv() + "" + qt);
                    s.setQpac(prod.getQtdvenda());
                    s.setQstock(prod.getQtstock());
                    s.setPreco(e.getPreco());

                    try {
                        sc.create(s, em);
                        ec.edit(ent, e, em);
                        pc.edit(ppp, prod, em);
                    } catch (Exception ex) {
                        Logger.getLogger(FormSaida.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    lbValidacao.setVisible(true);
                    lbValidacao.setText("Introduza Qtd menor ou igual a Qtd. de Stock nesta Serie/Lote");
                    txtQntP.requestFocusInWindow();
                    em.clear();
                    em.getTransaction().commit();
                    return;
                }
                comboprod.setSelectedIndex(-1);
                em.getTransaction().commit();
                JOptionPane.showMessageDialog(this, "Saida efectuada com Sucesso");
            } catch (Exception ex) {
                //   em.getTransaction().rollback();
                em.clear();
                em.getTransaction().commit();
                Logger.getLogger(FormEntrada.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                if (em != null) {
                    em.close();
                }
            }
            limpar();

            //this.setVisible(false);
        } else {
            int respo = JOptionPane.showOptionDialog(null, "Pretende modificar os dados desta Saida?", "ATENÇÃO!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                    null, new String[]{"SIM", "NÃO"}, null);
            if (respo == 1 || respo == -1) {
                return;
            }
            Produto ppp = (Produto) comboprod.getSelectedItem();
            SaidaJpaController sc = new SaidaJpaController(emf);
            ProdutoJpaController pc = new ProdutoJpaController(emf);
            EntradaJpaController ec = new EntradaJpaController(emf);
            Entrada e = (Entrada) cbe.getSelectedItem();
            Saida s = sc.findSaida(this.sa.getSaidaPK());
            //  Entrada ent = new EntradaJpaController(emf).getEntrada(s.getDatae());
            int qt = Integer.parseInt(txtQntP.getText());
            Produto prod = pc.findProduto(ppp.getIdproduto());
            if (s.getObs() == null) {
                e.setQv(e.getQv() - s.getQtd());
                e.setQs(e.getQs() - s.getQtd());
                prod.setQtdvenda(prod.getQtdvenda() - s.getQtd());
            } else {
                e.setQd(e.getQd() - s.getQtd());
                e.setQs(e.getQs() - s.getQtd());
            }
            if (qt > qtdi) {
                lbValidacao.setVisible(true);
                lbValidacao.setText("Introduza Qtd menor ou igual a Qtd. Disponivel");
                ea = new EntradaJpaController(emf).getEntData(s.getDatae());
                cbe.removeAllItems();
                cbe.addItem(ea);
                cbe.setSelectedItem(ea);
                qtde.setText("Quantidade: " + qtdi);
                txtQntP.requestFocusInWindow();
                return;
            }
//            if (e.getQs())){//(((e.getQs() - e.getQv()) + e.getQd())-s.getQtd() < qt) {
//               // System.out.println("qs: " + e.getQs());
//                JOptionPane.showMessageDialog(this, ((e.getQs() - e.getQv()) + e.getQd())-s.getQtd() + " Produtos ja foram vendidos / inutilizados!", "Atencao", JOptionPane.WARNING_MESSAGE);
//                txtQntP.grabFocus();
//                return;
//            }
            int oqt = s.getQtd();
            prod.setQtstock(prod.getQtstock() + oqt);

            //  ent.setQs(ent.getQs()-oqt);
            s.setQtd(qt);
            prod.setQtstock(prod.getQtstock() - qt);
            if (!obs.isEnabled()) {
                e.setQv((e.getQv() + qt));//(qt - e.getQs()-e.getQd()) + e.getQv());
                prod.setQtdvenda(prod.getQtdvenda() + qt);
                s.setObs(null);
            } else {
                e.setQd(e.getQd() + qt);
                // prod.setQtdvenda(prod.getQtdvenda() + oqt);
                s.setObs(obs.getText());
            }
            //e.setQs(qt + (e.getQs() - oqt));
            if (e.getQv() < 0) {
                // System.out.println("qs: " + e.getQs());
                JOptionPane.showMessageDialog(this, (e.getQv() * (-1)) + " Produtos ja foram vendidos!", "Atencao", JOptionPane.WARNING_MESSAGE);
                ea = new EntradaJpaController(emf).getEntData(s.getDatae());
                cbe.removeAllItems();
                cbe.addItem(ea);
                cbe.setSelectedItem(ea);
                qtde.setText("Quantidade: " + qtdi);
                txtQntP.grabFocus();
                return;
            }
            e.setQs(e.getQs() + qt);
            s.setQpac(prod.getQtdvenda());
            s.setQstock(prod.getQtstock());///
            s.setPreco(e.getPreco());///
            e.setProduto(prod);
            s.setProduto(prod);
            s.setDatae(e.getEntradaPK().getData());

            try {
                sc.edit(s);
                ec.edit(ea);
                ec.edit(e);
                pc.edit(prod);
            } catch (Exception ex) {
                Logger.getLogger(FormSaida.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(this, "saida editada com Sucesso");
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

//    public void combobox(JComboBox c) {
//        List<Fornecedor> listai = new FornecedorJpaController(emf).findFornecedorEntities();
//        c.removeAllItems();
//        for (Fornecedor lista : listai) {
//            c.addItem(lista);
//        }
//    }
    public void combobox(JComboBox c, Produto p) {
        List<Entrada> le = new EntradaJpaController(emf).getEntStock(p);
        c.removeAllItems();
        for (Entrada lista : le) {
            lista.setEntradaPK(lista.getEntradaPK());
            lista.setQitem(lista.getQtd() - lista.getQs());
            c.addItem(lista);
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        limpar();
        this.getParent().setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbeItemStateChanged
        Entrada e = (Entrada) cbe.getSelectedItem();
        if (e != null) {
            forn.setText("Fornecedor: " + e.getIdfornecedor().getNome());
            if (e.getDataexpiracao() != null) {
                dataexp.setText("Data Exp: " + new java.text.SimpleDateFormat("dd/MM/yyyy HH:mm").format(e.getDataexpiracao()));
            }
            String prec = "";
            prec = e.getQa() + "x" + e.getPreco();
            if (e.getPb() != null) {
                prec = prec + " | " + e.getQb() + "x" + e.getPb();
            }
            if (e.getPc() != null) {
                prec = prec + " | " + e.getQc() + "x" + e.getPc();
            }
            ep.setText("Preco: " + prec);
            qtde.setText("Quantidade: " + (e.getQtd() - e.getQs()));
        }
    }//GEN-LAST:event_cbeItemStateChanged

    private void cvdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cvdItemStateChanged
        if (cvd.isSelected()) {
            cvc.setSelected(false);
            obs.setEnabled(false);
        }
    }//GEN-LAST:event_cvdItemStateChanged

    private void cvcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cvcItemStateChanged
        if (cvc.isSelected()) {
            cvd.setSelected(false);
            obs.setEnabled(true);
        }
    }//GEN-LAST:event_cvcItemStateChanged

    private void comboprodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboprodItemStateChanged
        Produto p = (Produto) comboprod.getSelectedItem();
        limpar();
        if (p != null) {
            combobox(cbe, p);
            if (cbe.getItemCount() > 0) {
                cbe.setSelectedIndex(0);
            }
            qa.setText(p.getQtstock() + "");
        }
    }//GEN-LAST:event_comboprodItemStateChanged
    public void limpar() {
        txtIdP.setText("");
        txtQntP.setText("");
//        lbpv.setText("");
        forn.setText("");
        qtde.setText("");
        ep.setText("");
        dataexp.setText("");
        dpk.setDate(null);
        obs.setText("");
        cvd.setSelected(true);
        lbValidacao.setVisible(false);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormSaida dialog = new FormSaida(new javax.swing.JFrame(), po, sa, t, client, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public int getLimpaVenda() {

        return g();

    }

    public int g() {
        return 1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbe;
    private javax.swing.JComboBox comboprod;
    private javax.swing.JRadioButton cvc;
    private javax.swing.JRadioButton cvd;
    private javax.swing.JLabel dataexp;
    private com.toedter.calendar.JDateChooser dpk;
    private javax.swing.JLabel ep;
    private javax.swing.JLabel forn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel lbValidacao;
    private javax.swing.JTextField obs;
    private javax.swing.JLabel qa;
    private javax.swing.JLabel qtde;
    private javax.swing.JTextField txtIdP;
    private javax.swing.JTextField txtQntP;
    // End of variables declaration//GEN-END:variables

    private Entrada EntradaJpaController(EntityManagerFactory emf) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
